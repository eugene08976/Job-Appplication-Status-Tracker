{"ast":null,"code":"var _jsxFileName = \"/Users/eugenelan/Desktop/JobHunt/jobhunt-frontend/src/JobSubmission.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './JobSubmission.css';\nimport { fetchJobs } from './ApplicationStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobSubmission() {\n  _s();\n  const [url, setUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [company, setCompany] = useState('');\n  const [error, setError] = useState('');\n  const [submitMessage, setSubmitMessage] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!url || !title || !company) {\n      setError('Missing values');\n      return;\n    }\n    setError('');\n    axios.post('http://localhost:8000/api/submit-job/', {\n      url,\n      title,\n      company\n    }).then(response => {\n      console.log('Job submitted successfully');\n      setSubmitMessage('Job submitted successfully');\n      setUrl('');\n      setTitle('');\n      setCompany('');\n    }).catch(error => {\n      if (error.response && error.response.status === 409) {\n        setSubmitMessage('Job already submitted');\n      } else if (error.response && error.response.status === 400) {\n        setSubmitMessage('Invalid URL');\n      } else {\n        console.error('Error:', error);\n        setError('An error occurred while submitting the job');\n      }\n    });\n  };\n  const filterByCompany = value => {\n    if (!value) {\n      setFilteredJobs(jobs);\n    } else {\n      const filteredData = jobs.filter(job => job.company.toLowerCase().includes(value.toLowerCase()));\n      setFilteredJobs(filteredData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JobSubmissionContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Company:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: company,\n          onChange: e => setCompany(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"job-submission-button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), submitMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: submitMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(JobSubmission, \"TyvUmyUA5sk7Ue6LKOxjj3tP4ic=\");\n_c = JobSubmission;\nexport default JobSubmission;\nvar _c;\n$RefreshReg$(_c, \"JobSubmission\");","map":{"version":3,"names":["React","useState","axios","fetchJobs","jsxDEV","_jsxDEV","JobSubmission","_s","url","setUrl","title","setTitle","company","setCompany","error","setError","submitMessage","setSubmitMessage","handleSubmit","event","preventDefault","post","then","response","console","log","catch","status","filterByCompany","value","setFilteredJobs","jobs","filteredData","filter","job","toLowerCase","includes","className","children","onSubmit","type","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eugenelan/Desktop/JobHunt/jobhunt-frontend/src/JobSubmission.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './JobSubmission.css';\nimport { fetchJobs } from './ApplicationStatus';\n\nfunction JobSubmission() {\n  const [url, setUrl] = useState('');\n  const [title, setTitle] = useState('');\n  const [company, setCompany] = useState('');\n  const [error, setError] = useState('');\n  const [submitMessage, setSubmitMessage] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!url || !title || !company) {\n      setError('Missing values');\n      return;\n    }\n    setError('');\n\n    axios\n      .post('http://localhost:8000/api/submit-job/', { url, title, company })\n      .then((response) => {\n        console.log('Job submitted successfully');\n        setSubmitMessage('Job submitted successfully');\n        setUrl('');\n        setTitle('');\n        setCompany('');\n      })\n      .catch((error) => {\n        if (error.response && error.response.status === 409) {\n          setSubmitMessage('Job already submitted');\n        } else if (error.response && error.response.status === 400) {\n          setSubmitMessage('Invalid URL');\n        } else {\n          console.error('Error:', error);\n          setError('An error occurred while submitting the job');\n        }\n      });\n  };\n\n  const filterByCompany = (value) => {\n    if (!value) {\n      setFilteredJobs(jobs);\n    } else {\n      const filteredData = jobs.filter(job => job.company.toLowerCase().includes(value.toLowerCase()));\n      setFilteredJobs(filteredData);\n    }\n  };\n\n  return (\n    <div className=\"JobSubmissionContainer\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          Job URL:\n          <input type=\"text\" value={url} onChange={(e) => setUrl(e.target.value)} required />\n        </label>\n        <label>\n          Job Title:\n          <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n        </label>\n        <label>\n          Company:\n          <input type=\"text\" value={company} onChange={(e) => setCompany(e.target.value)} required />\n        </label>\n        <div className=\"submit-section\">\n          <button className=\"job-submission-button\" type=\"submit\">\n            Submit\n          </button>\n          {error && <p className=\"error-message\">{error}</p>}\n          {submitMessage && <p className=\"success-message\">{submitMessage}</p>}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default JobSubmission;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}