{"ast":null,"code":"var _jsxFileName = \"/Users/eugenelan/Desktop/JobHunt/jobhunt-frontend/src/ApplicationStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ApplicationStatus.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApplicationStatus() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get('/api/jobs/');\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n  const updateStatus = async (id, newStatus) => {\n    try {\n      const response = await axios.patch(`/api/jobs/${id}/update-status/`, {\n        status: newStatus\n      });\n      console.log('Job status updated:', response.data);\n      // You can update the state or perform any additional actions after the status is successfully updated\n    } catch (error) {\n      console.error('Error updating job status:', error);\n    }\n  };\n  const filterJobs = status => {\n    setFilter(status);\n    if (status === 'No Response Yet') {\n      setFilteredJobs(jobs.filter(job => job.status === 'Applied'));\n    } else if (status === 'Interviewing') {\n      setFilteredJobs(jobs.filter(job => job.status === 'Phone Screen' || job.status === 'VO'));\n    } else if (status === 'Rejected') {\n      setFilteredJobs(jobs.filter(job => job.status === 'Rejected'));\n    } else {\n      setFilteredJobs(jobs);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"application-status-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"application-status-heading\",\n      children: \"Application Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [job.title, \" at \", job.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"URL: \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: job.url,\n          children: job.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", job.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Update Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => updateStatus(job.id, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Applied\",\n            children: \"Applied\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Phone Screen\",\n            children: \"Phone Screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"VO\",\n            children: \"VO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Offered\",\n            children: \"Offered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Rejected\",\n            children: \"Rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, job.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ApplicationStatus, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = ApplicationStatus;\nexport default ApplicationStatus;\nvar _c;\n$RefreshReg$(_c, \"ApplicationStatus\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ApplicationStatus","_s","jobs","setJobs","fetchJobs","response","get","data","error","console","updateStatus","id","newStatus","patch","status","log","filterJobs","setFilter","setFilteredJobs","filter","job","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","company","href","url","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/eugenelan/Desktop/JobHunt/jobhunt-frontend/src/ApplicationStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ApplicationStatus.css';\nimport axios from 'axios';\n\nfunction ApplicationStatus() {\n  const [jobs, setJobs] = useState([]);\n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  const fetchJobs = async () => {\n    try {\n      const response = await axios.get('/api/jobs/');\n      setJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n    }\n  };\n\n  const updateStatus = async (id, newStatus) => {\n    try {\n      const response = await axios.patch(`/api/jobs/${id}/update-status/`, { status: newStatus });\n      console.log('Job status updated:', response.data);\n      // You can update the state or perform any additional actions after the status is successfully updated\n    } catch (error) {\n      console.error('Error updating job status:', error);\n    }\n  };\n  \n  \n\n  const filterJobs = (status) => {\n    setFilter(status);\n    if (status === 'No Response Yet') {\n      setFilteredJobs(jobs.filter(job => job.status === 'Applied'));\n    } else if (status === 'Interviewing') {\n      setFilteredJobs(jobs.filter(job => job.status === 'Phone Screen' || job.status === 'VO'));\n    } else if (status === 'Rejected') {\n      setFilteredJobs(jobs.filter(job => job.status === 'Rejected'));\n    } else {\n      setFilteredJobs(jobs);\n    }\n  };\n\n  return (\n    <div className=\"application-status-container\">\n      <h2 className=\"application-status-heading\">Application Status</h2>\n      <div className=\"filter-buttons\">\n        {/* Add your filter buttons here */}\n      </div>\n      {jobs.map((job) => (\n        <div key={job.id}>\n          <h3>{job.title} at {job.company}</h3>\n          <p>URL: <a href={job.url}>{job.url}</a></p>\n          <p>Status: {job.status}</p>\n          <label>\n            Update Status:\n            <select onChange={(e) => updateStatus(job.id, e.target.value)}>\n              <option value=\"\">Select...</option>\n              <option value=\"Applied\">Applied</option>\n              <option value=\"Phone Screen\">Phone Screen</option>\n              <option value=\"VO\">VO</option>\n              <option value=\"Offered\">Offered</option>\n              <option value=\"Rejected\">Rejected</option>\n            </select>\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ApplicationStatus;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}